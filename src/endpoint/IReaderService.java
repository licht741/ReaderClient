
package endpoint;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IReaderService", targetNamespace = "http://endpoint/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IReaderService {


    /**
     * 
     * @return
     *     returns java.util.List<endpoint.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllBooks", targetNamespace = "http://endpoint/", className = "endpoint.GetAllBooks")
    @ResponseWrapper(localName = "getAllBooksResponse", targetNamespace = "http://endpoint/", className = "endpoint.GetAllBooksResponse")
    @Action(input = "http://endpoint/IReaderService/getAllBooksRequest", output = "http://endpoint/IReaderService/getAllBooksResponse")
    public List<Book> getAllBooks();

    /**
     * 
     * @return
     *     returns java.util.List<endpoint.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableBooks", targetNamespace = "http://endpoint/", className = "endpoint.GetAvailableBooks")
    @ResponseWrapper(localName = "getAvailableBooksResponse", targetNamespace = "http://endpoint/", className = "endpoint.GetAvailableBooksResponse")
    @Action(input = "http://endpoint/IReaderService/getAvailableBooksRequest", output = "http://endpoint/IReaderService/getAvailableBooksResponse")
    public List<Book> getAvailableBooks();

    /**
     * 
     * @param userID
     * @param bookID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "takeBookFromLibrary", targetNamespace = "http://endpoint/", className = "endpoint.TakeBookFromLibrary")
    @ResponseWrapper(localName = "takeBookFromLibraryResponse", targetNamespace = "http://endpoint/", className = "endpoint.TakeBookFromLibraryResponse")
    @Action(input = "http://endpoint/IReaderService/takeBookFromLibraryRequest", output = "http://endpoint/IReaderService/takeBookFromLibraryResponse")
    public int takeBookFromLibrary(
        @WebParam(name = "userID", targetNamespace = "")
        int userID,
        @WebParam(name = "bookID", targetNamespace = "")
        int bookID);

    /**
     * 
     * @param password
     * @param login
     * @return
     *     returns endpoint.AuthWrap
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "userAuthorization", targetNamespace = "http://endpoint/", className = "endpoint.UserAuthorization")
    @ResponseWrapper(localName = "userAuthorizationResponse", targetNamespace = "http://endpoint/", className = "endpoint.UserAuthorizationResponse")
    @Action(input = "http://endpoint/IReaderService/userAuthorizationRequest", output = "http://endpoint/IReaderService/userAuthorizationResponse")
    public AuthWrap userAuthorization(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param userID
     * @return
     *     returns java.util.List<endpoint.Operation>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserBooks", targetNamespace = "http://endpoint/", className = "endpoint.GetUserBooks")
    @ResponseWrapper(localName = "getUserBooksResponse", targetNamespace = "http://endpoint/", className = "endpoint.GetUserBooksResponse")
    @Action(input = "http://endpoint/IReaderService/getUserBooksRequest", output = "http://endpoint/IReaderService/getUserBooksResponse")
    public List<Operation> getUserBooks(
        @WebParam(name = "userID", targetNamespace = "")
        int userID);

    /**
     * 
     * @param userID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "extendUsage", targetNamespace = "http://endpoint/", className = "endpoint.ExtendUsage")
    @ResponseWrapper(localName = "extendUsageResponse", targetNamespace = "http://endpoint/", className = "endpoint.ExtendUsageResponse")
    @Action(input = "http://endpoint/IReaderService/extendUsageRequest", output = "http://endpoint/IReaderService/extendUsageResponse")
    public int extendUsage(
        @WebParam(name = "userID", targetNamespace = "")
        int userID);

    /**
     * 
     * @param operationID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnBook", targetNamespace = "http://endpoint/", className = "endpoint.ReturnBook")
    @ResponseWrapper(localName = "returnBookResponse", targetNamespace = "http://endpoint/", className = "endpoint.ReturnBookResponse")
    @Action(input = "http://endpoint/IReaderService/returnBookRequest", output = "http://endpoint/IReaderService/returnBookResponse")
    public int returnBook(
        @WebParam(name = "operationID", targetNamespace = "")
        int operationID);

    /**
     * 
     * @param password
     * @param name
     * @param login
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registration", targetNamespace = "http://endpoint/", className = "endpoint.Registration")
    @ResponseWrapper(localName = "registrationResponse", targetNamespace = "http://endpoint/", className = "endpoint.RegistrationResponse")
    @Action(input = "http://endpoint/IReaderService/registrationRequest", output = "http://endpoint/IReaderService/registrationResponse")
    public int registration(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param count
     * @param bookID
     * @return
     *     returns int
     */
    @WebMethod(operationName = "make_order")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "make_order", targetNamespace = "http://endpoint/", className = "endpoint.MakeOrder")
    @ResponseWrapper(localName = "make_orderResponse", targetNamespace = "http://endpoint/", className = "endpoint.MakeOrderResponse")
    @Action(input = "http://endpoint/IReaderService/make_orderRequest", output = "http://endpoint/IReaderService/make_orderResponse")
    public int makeOrder(
        @WebParam(name = "bookID", targetNamespace = "")
        int bookID,
        @WebParam(name = "count", targetNamespace = "")
        int count);

}
